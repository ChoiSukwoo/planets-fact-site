{"version":3,"sources":["Resource/icon-hamburger.svg","Resource/icon-chevron.svg","Layout/Header.js","Resource/icon-source.svg","Layout/Content.js","Resource/background-stars.svg","Layout/MainLayout.js","index.js"],"names":["_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconHamburger","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","fill","fillRule","d","_path","ForwardRef","SvgIconChevron","stroke","opacity","ViewCover","styled","div","Title","W_View","W_SelecterCover","W_Selecter","h4","color","W_Header","PlanetName","SetPlanet","PlanetSelecter","map","value","onClick","name","className","toUpperCase","T_View","T_SelecterCover","T_Selecter","T_Header","M_View","M_ViewHeader","M_SelecterCover","display","M_Selecter","M_SelecterNm","M_Circle","M_Header","HeaderState","useEffect","setheader","changeHeaderState","header","Header","View","Device","Planet","planetName","setPlanet","SvgIconSource","W_ContentViewCover","W_ContentView","W_PlantInfoCover","W_PlantImgCover","W_PlanGeologyImg","img","W_PlantInfo","W_PlantName","h1","W_PlantInfoContent","W_PlantInfoContentSourceWrap","a","W_PlantInfoContentSourceCover","W_PlantInfoContentSourceIns","W_PlantInfoSelectCover","W_PlantInfoSelect","h3","W_PlantInfoSelected","W_PlantInfoSelectNum","W_PlantFigureCover","W_PlantFigure","W_PlantFigureTitle","W_PlantFigureContent","h2","W_Content","PlanetImg","planetInfo","src","process","planet","images","size","internal","PlanetGeologyImg","geology","OverView","setPlanetInfo","Structure","Geology","content","href","rotation","revolution","radius","temperature","T_ContentViewCover","T_PlantImgCover","T_PlanGeologyImg","T_PlantInfoCover","T_PlantInfo","T_PlantInfoContentCover","T_PlantName","T_PlantInfoContent","T_PlantInfoContentSourceWrap","T_PlantInfoContentSourceCover","T_PlantFigureCover","T_PlantFigure","T_PlantFigureTitle","T_PlantFigureContent","T_Content","M_ContentViewCover","M_ContentView","M_PlantInfoCover","M_PlantInfoSelectCover","M_PlantInfoSelect","M_PlantInfoSelected","M_PlantImgCover","M_PlanGeologyImg","M_PlantInfo","M_PlantName","M_PlantInfoContent","M_PlantInfoContentSourceWrap","M_PlantInfoContentSourceCover","M_PlantFigureCover","M_PlantFigure","M_PlantFigureTitle","M_PlantFigureContent","M_Content","Content","bgSvg","MainLayout","device","useState","window","innerWidth","innerHeight","state","setState","scrolling","nowDevice","x","scrollX","y","scrollY","addEventListener","removeEventListener","useResize","headerState","useHeaderOpen","some","usePlanet","bgStar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc928aa8.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconHamburger(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 17,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"current\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v3H0zM0 7h24v3H0zM0 14h24v3H0z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconHamburger);\nexport default __webpack_public_path__ + \"static/media/icon-hamburger.04b0a506.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconChevron(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 6,\n    height: 8,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#FFF\",\n    opacity: 0.4,\n    d: \"M1 0l4 4-4 4\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconChevron);\nexport default __webpack_public_path__ + \"static/media/icon-chevron.8915cee9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nimport { ReactComponent as LineSvg } from '../Resource/icon-hamburger.svg';\r\nimport { ReactComponent as ArrowSvg } from '../Resource/icon-chevron.svg';\r\n\r\nconst ViewCover = styled.div`\r\n  border-bottom : 1px solid rgba(151,151,151,0.2);\r\n`\r\n\r\nconst Title = styled.div`\r\n  font-size: 28px;  line-height:36px; font-family:'Antonio'; word-spacing: -1.05px;  font-weight: 500;\r\n`\r\n\r\n\r\nconst W_View = styled.div`\r\n  display:flex; justify-content: space-between; align-items: flex-end;\r\n  height:85px;  padding: 0 40px 27px 32px;\r\n`\r\n\r\nconst W_SelecterCover = styled.div`\r\n  display: flex;  column-gap: 33px;\r\n  height: 100%;\r\n`\r\n\r\nconst W_Selecter = styled.h4`\r\n  opacity: 75%;\r\n  height: 100%;\r\n  display: flex;  align-items: flex-end;\r\n  &:hover{\r\n    opacity: 100%;\r\n    border-top: 4px solid ${props => props.color};\r\n  }\r\n`\r\n\r\nfunction W_Header({ PlanetName,SetPlanet}) {\r\n\r\n  let PlanetSelecter = PlanetName.map((value, key) => <W_Selecter key={key} color={value.color} onClick={()=>SetPlanet(value.name)} className=\"W_Selecter\">{value.name.toUpperCase()}</W_Selecter>)\r\n\r\n  return (\r\n    <ViewCover className=\"ViewCover\">\r\n      <W_View className=\"W_View\">\r\n        <Title className=\"Title\">THE PLANETS</Title>\r\n        <W_SelecterCover className=\"W_SelecterCover\">{PlanetSelecter}</W_SelecterCover>\r\n      </W_View>\r\n    </ViewCover>\r\n  )\r\n}\r\n\r\n\r\nconst T_View = styled.div`\r\n    display:flex;  flex-direction: column;  align-items: center; justify-content: space-between;\r\n    height: 159px;  padding: 32px 0 27px 0;\r\n`\r\nconst T_SelecterCover = styled.div`\r\n  display: flex;  column-gap: 33px;\r\n`\r\n\r\nconst T_Selecter = styled.h4`\r\n  opacity: 75%;\r\n  height: 100%;\r\n  display: flex;  align-items: flex-end;\r\n`\r\n\r\nfunction T_Header({ PlanetName,SetPlanet}) {\r\n\r\n  let PlanetSelecter = PlanetName.map((value, key) => <T_Selecter key={key}  onClick={()=>SetPlanet(value.name)}  className=\"T_Selecter\">{value.name.toUpperCase()}</T_Selecter>)\r\n\r\n  return (\r\n    <ViewCover className=\"ViewCover\">\r\n      <T_View className=\"T_View\">\r\n        <Title>THE PLANETS</Title>\r\n        <T_SelecterCover className=\"T_SelecterCover\">{PlanetSelecter}</T_SelecterCover>\r\n      </T_View>\r\n    </ViewCover>\r\n  )\r\n}\r\n\r\n\r\nconst M_View = styled.div`\r\n    display:flex; flex-direction: column;\r\n    height: 100%;\r\n`\r\n\r\nconst M_ViewHeader = styled.div`\r\n  display: flex;  justify-content: space-between; align-items: center;\r\n  width: 100%;  height: 68px; padding: 16px 24px;\r\n`\r\n\r\n\r\nconst M_SelecterCover = styled.div`\r\n  height: 100%; width: 100%;\r\n  display: ${props => props.display};  flex-direction: column; justify-content: center;\r\n`\r\n\r\nconst M_Selecter = styled.div`\r\n  display: flex;  align-items: center;  justify-content: space-between;\r\n  padding: 20px 24px;\r\n`\r\n\r\nconst M_SelecterNm = styled.div`\r\n  display: flex;  align-items: center;  column-gap: 24px;\r\n  font-size: 15px;  font-weight: 700; line-height: 25px;  word-spacing: 1.36px;\r\n`\r\n\r\nconst M_Circle = styled.div`\r\n  width: 20px;  height: 20px; border-radius: 50%;\r\n  background-color: ${props => props.color};\r\n`\r\n\r\nfunction M_Header({ HeaderState, PlanetName,SetPlanet}) {\r\n\r\n  useEffect(() => {\r\n    HeaderState.setheader('open')\r\n\r\n    return () => {\r\n      HeaderState.setheader('close')\r\n    }\r\n  }, [])\r\n\r\n\r\n  let PlanetSelecter = PlanetName.map((value, key) => <M_Selecter key={key} className=\"M_Selecter\" onClick={() => {HeaderState.setheader('close'); SetPlanet(value.name);}}  ><M_SelecterNm className=\"M_SelecterNm\"><M_Circle color={value.color}/> {value.name.toUpperCase()}</M_SelecterNm><ArrowSvg/></M_Selecter>)\r\n\r\n  let changeHeaderState = HeaderState.header == \"close\" ? <LineSvg  fill=\"#fff\" onClick={() => HeaderState.setheader('open')} /> : <LineSvg fill=\"rgba(151,151,151,0.25)\" />\r\n\r\n  return (\r\n    <M_View className=\"M_View\" >\r\n      <ViewCover className=\"ViewCover\">\r\n\r\n        <M_ViewHeader className=\"M_ViewHeader\">\r\n          <Title className=\"Title\">THE PLANETS</Title>\r\n          {changeHeaderState}\r\n        </M_ViewHeader>\r\n      </ViewCover>\r\n\r\n      <M_SelecterCover className=\"M_SelecterCover\" display={HeaderState.header==\"open\" ? \"flex\" : \"none\"}>\r\n        {PlanetSelecter}\r\n      </M_SelecterCover>\r\n    </M_View>\r\n  )\r\n}\r\n\r\n\r\nfunction Header({ Device, HeaderState, Planet }) {\r\n\r\n  let View\r\n\r\n  switch (Device) {\r\n    case \"web\": View = W_Header\r\n      break;\r\n    case \"tablet\": View = T_Header\r\n      break;\r\n    case \"mobile\": View = M_Header\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <View HeaderState={HeaderState} PlanetName={Planet.planetName} SetPlanet={Planet.setPlanet} />\r\n  );\r\n\r\n}\r\n\r\nexport default Header;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconSource(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 12,\n    height: 12,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M11.34.66C10.9.22 10.37 0 9.75 0h-7.5C1.63 0 1.1.22.66.66.22 1.1 0 1.63 0 2.25v7.5c0 .62.22 1.15.66 1.59.44.44.97.66 1.59.66h7.5c.62 0 1.15-.22 1.59-.66.44-.44.66-.97.66-1.59v-7.5c0-.62-.22-1.15-.66-1.59zM10 6.25a.467.467 0 01-.305.46.544.544 0 01-.195.04.465.465 0 01-.352-.149L8.023 5.476 3.852 9.648a.481.481 0 01-.352.149.48.48 0 01-.352-.149l-.796-.797a.48.48 0 01-.149-.351.48.48 0 01.149-.352l4.172-4.172-1.125-1.125c-.162-.15-.198-.333-.11-.546A.467.467 0 015.75 2H9.5c.135 0 .253.05.352.148A.48.48 0 0110 2.5v3.75z\",\n    opacity: 0.5\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconSource);\nexport default __webpack_public_path__ + \"static/media/icon-source.90231c68.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { ReactComponent as Source } from '../Resource/icon-source.svg';\r\n\r\n\r\nconst W_ContentViewCover = styled.div`\r\n  display: flex;  justify-content: center;  padding: 69px 0 56px;\r\n`\r\n\r\nconst W_ContentView = styled.div`\r\n  display: flex;  flex-direction:column;  justify-content: flex-end;  align-items: flex-end;\r\n`\r\n\r\nconst W_PlantInfoCover = styled.div`\r\n  display: flex;  justify-content: flex-end;  align-items: flex-end;\r\n`\r\n\r\nconst W_PlantImgCover = styled.div`\r\n  position: relative; \r\n  width: 668px; height: 668px;  margin-right: 110px;\r\n`\r\n\r\nconst W_PlanGeologyImg = styled.img`\r\n  position: absolute; bottom: 70px; left: 50%;      transform: translateX(-50%);\r\n  width: 163px; height: 199px;\r\n`\r\n\r\nconst W_PlantInfo = styled.div`\r\n  display: flex;  flex-direction: column; margin-bottom:70px;\r\n  width: 350px;\r\n\r\n`\r\nconst W_PlantName = styled.h1`\r\n  margin-bottom: 23px;\r\n`\r\n\r\nconst W_PlantInfoContent = styled.div`\r\n  height:150px; margin-bottom: 24px;\r\n`\r\n\r\nconst W_PlantInfoContentSourceWrap = styled.a`\r\n  display: flex;  align-items: center;  column-gap: 8px;\r\n  width: fit-content;  margin-bottom: 39px;\r\n`\r\nconst W_PlantInfoContentSourceCover = styled.div`\r\n  display: flex; opacity: 50%;\r\n`\r\n\r\nconst W_PlantInfoContentSourceIns = styled.div`\r\n  text-decoration: underline; font-weight: 600;\r\n`\r\n\r\n\r\nconst W_PlantInfoSelectCover = styled.div`\r\n  display: flex;  flex-direction: column; row-gap: 16px;\r\n`\r\n\r\nconst W_PlantInfoSelect = styled.h3`\r\n  display: flex;  justify-content: flex-start;  align-items: center;\r\n  height: 48px; padding: 0 28px; column-gap: 28px;\r\n  background-color: ${props => props.color};    border: 1px solid rgba(216,216,216,.2) ;\r\n\r\n  &:hover{\r\n    background-color: rgba(216,216,216,.2); border: 1px solid rgba(216,216,216,.0);\r\n  }\r\n`\r\n\r\nconst W_PlantInfoSelected = styled.h3`\r\n  display: flex;  justify-content: flex-start;  align-items: center;\r\n  height: 48px; padding: 0 28px; column-gap: 28px;\r\n  background-color: ${props => props.color};    border: 1px solid ${props => props.color} ;\r\n`\r\n\r\nconst W_PlantInfoSelectNum = styled.div`\r\n  opacity: 0.5;\r\n`\r\n\r\nconst W_PlantFigureCover = styled.div`\r\n  display: flex;  column-gap: 30px;\r\n`\r\nconst W_PlantFigure = styled.div`\r\n  display: flex;  flex-direction: column; row-gap: 4px;\r\n  padding: 20px 23px 27px 23px; width: 255px; height: 128px;\r\n  border: 1px solid rgba(216,216,216,.2) ;\r\n`\r\nconst W_PlantFigureTitle = styled.h4`\r\n  opacity: 50%;\r\n`\r\nconst W_PlantFigureContent = styled.h2``\r\n\r\nfunction W_Content({ Planet, Device }) {\r\n\r\n  let PlanetImg = Planet.planetInfo == \"overview\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} /> : Planet.planetInfo == \"structure\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.internal} width={Planet.planet.size[Device]} /> : <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} />\r\n  let PlanetGeologyImg = Planet.planetInfo == \"geology\" ? <W_PlanGeologyImg src={process.env.PUBLIC_URL + Planet.planet.images.geology} /> : \"\"\r\n\r\n  let OverView = Planet.planetInfo == \"overview\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>01</W_PlantInfoSelectNum>OVERVIEW</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('overview') }}><W_PlantInfoSelectNum>01</W_PlantInfoSelectNum>OVERVIEW</W_PlantInfoSelect>\r\n  let Structure = Planet.planetInfo == \"structure\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>02</W_PlantInfoSelectNum>INTERNAL STRUCTURE</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('structure') }}><W_PlantInfoSelectNum>02</W_PlantInfoSelectNum>INTERNAL STRUCTURE</W_PlantInfoSelect>\r\n  let Geology = Planet.planetInfo == \"geology\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>03</W_PlantInfoSelectNum>SURFACE GEOLOGY</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('geology') }}><W_PlantInfoSelectNum>03</W_PlantInfoSelectNum>SURFACE GEOLOGY</W_PlantInfoSelect>\r\n\r\n\r\n  return (\r\n    <W_ContentViewCover>\r\n      <W_ContentView>\r\n        <W_PlantInfoCover>\r\n          <W_PlantImgCover className=\"center\"> {PlanetImg}{PlanetGeologyImg}</W_PlantImgCover>\r\n          <W_PlantInfo>\r\n            <W_PlantName>{Planet.planet.name.toUpperCase()}</W_PlantName>\r\n            <W_PlantInfoContent>{Planet.planet[Planet.planetInfo].content}</W_PlantInfoContent>\r\n            <W_PlantInfoContentSourceWrap href={Planet.planet[Planet.planetInfo].source}><W_PlantInfoContentSourceCover>Source : <W_PlantInfoContentSourceIns> Wikipedia</W_PlantInfoContentSourceIns></W_PlantInfoContentSourceCover><Source /></W_PlantInfoContentSourceWrap>\r\n            <W_PlantInfoSelectCover>\r\n              {OverView}\r\n              {Structure}\r\n              {Geology}\r\n            </W_PlantInfoSelectCover>\r\n          </W_PlantInfo>\r\n        </W_PlantInfoCover>\r\n        <W_PlantFigureCover>\r\n          <W_PlantFigure>\r\n            <W_PlantFigureTitle>ROTATION TIME</W_PlantFigureTitle>\r\n            <W_PlantFigureContent>{Planet.planet.rotation}</W_PlantFigureContent>\r\n          </W_PlantFigure>\r\n          <W_PlantFigure>\r\n            <W_PlantFigureTitle>REVOLUTION TIME</W_PlantFigureTitle>\r\n            <W_PlantFigureContent>{Planet.planet.revolution}</W_PlantFigureContent>\r\n          </W_PlantFigure>\r\n          <W_PlantFigure>\r\n            <W_PlantFigureTitle>RADIUS</W_PlantFigureTitle>\r\n            <W_PlantFigureContent>{Planet.planet.radius}</W_PlantFigureContent>\r\n          </W_PlantFigure>\r\n          <W_PlantFigure>\r\n            <W_PlantFigureTitle>AVERAGE TEMP.</W_PlantFigureTitle>\r\n            <W_PlantFigureContent>{Planet.planet.temperature}</W_PlantFigureContent>\r\n          </W_PlantFigure>\r\n        </W_PlantFigureCover>\r\n      </W_ContentView>\r\n    </W_ContentViewCover>\r\n  )\r\n}\r\n\r\n\r\nconst T_ContentViewCover = styled.div`\r\n  display: flex;  justify-content: center;  padding: 27px 0 36px;\r\n`\r\nconst T_PlantImgCover = styled.div`\r\n  position: relative; \r\n  width: 422px; height: 422px; \r\n`\r\n\r\nconst T_PlanGeologyImg = styled.img`\r\nposition: absolute; bottom: 20px; left: 50%;      transform: translateX(-50%);\r\nwidth: 120px; height: 150px;\r\n`\r\n\r\nconst T_PlantInfoCover = styled.div`\r\n  display: flex;  flex-direction:column;  justify-content: flex-end;  align-items: center;\r\n`\r\n\r\nconst T_PlantInfo = styled.div`\r\n  display: flex;  justify-content: space-between;\r\n  width: 678px;\r\n`\r\n\r\nconst T_PlantInfoContentCover = styled.div`\r\n  display: flex;  flex-direction: column;\r\n  width: 339px;\r\n`\r\n\r\nconst T_PlantName = styled.h1`\r\n  font-size: 48px;  line-height: 1;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst T_PlantInfoContent = styled.div`\r\n  height:110px; margin-bottom: 22px;  \r\n  line-height: 22px;  font-size: 11px;\r\n`\r\n\r\nconst T_PlantInfoContentSourceWrap = styled.a`\r\n  display: flex;  align-items: center;  column-gap: 4px;\r\n  width: fit-content;  margin-bottom: 37px;\r\n`\r\nconst T_PlantInfoContentSourceCover = styled.div`\r\n  display: flex; opacity: 50%; font-size: 12px;\r\n`\r\n\r\nconst T_PlantFigureCover = styled.div`\r\n  display: flex;  column-gap: 11px;\r\n`\r\nconst T_PlantFigure = styled.div`\r\n  display: flex;  flex-direction: column; row-gap: 6px;\r\n  padding: 20px 23px 27px 23px; width: 164px; height: 88px;\r\n  border: 1px solid rgba(216,216,216,.2) ;\r\n  `\r\n\r\nconst T_PlantFigureTitle = styled.h4`\r\n  opacity: 50%;\r\n  font-size: 8px; line-height: 16px;  word-spacing: 0.73px;\r\n`\r\n\r\nconst T_PlantFigureContent = styled.h2`\r\n  font-size: 24px;  line-height: 1; word-spacing: -0.9px;\r\n`\r\n\r\n\r\nfunction T_Content({ Planet, Device }) {\r\n\r\n  let PlanetImg = Planet.planetInfo == \"overview\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} /> : Planet.planetInfo == \"structure\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.internal} width={Planet.planet.size[Device]} /> : <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} />\r\n  let PlanetGeologyImg = Planet.planetInfo == \"geology\" ? <T_PlanGeologyImg src={process.env.PUBLIC_URL + Planet.planet.images.geology} /> : \"\"\r\n\r\n  let OverView = Planet.planetInfo == \"overview\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>01</W_PlantInfoSelectNum>OVERVIEW</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('overview') }}><W_PlantInfoSelectNum>01</W_PlantInfoSelectNum>OVERVIEW</W_PlantInfoSelect>\r\n  let Structure = Planet.planetInfo == \"structure\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>02</W_PlantInfoSelectNum>INTERNAL STRUCTURE</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('structure') }}><W_PlantInfoSelectNum>02</W_PlantInfoSelectNum>INTERNAL STRUCTURE</W_PlantInfoSelect>\r\n  let Geology = Planet.planetInfo == \"geology\" ? <W_PlantInfoSelected color={Planet.planet.color}><W_PlantInfoSelectNum>03</W_PlantInfoSelectNum>SURFACE GEOLOGY</W_PlantInfoSelected> : <W_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('geology') }}><W_PlantInfoSelectNum>03</W_PlantInfoSelectNum>SURFACE GEOLOGY</W_PlantInfoSelect>\r\n\r\n\r\n  return (\r\n    <T_ContentViewCover>\r\n      <W_ContentView>\r\n        <T_PlantInfoCover>\r\n          <T_PlantImgCover className=\"center\"> {PlanetImg}{PlanetGeologyImg}</T_PlantImgCover>\r\n          <T_PlantInfo>\r\n            <T_PlantInfoContentCover>\r\n              <T_PlantName>{Planet.planet.name.toUpperCase()}</T_PlantName>\r\n              <T_PlantInfoContent>{Planet.planet[Planet.planetInfo].content}</T_PlantInfoContent>\r\n              <T_PlantInfoContentSourceWrap href={Planet.planet[Planet.planetInfo].source}><T_PlantInfoContentSourceCover>Source : <W_PlantInfoContentSourceIns> Wikipedia</W_PlantInfoContentSourceIns></T_PlantInfoContentSourceCover><Source /></T_PlantInfoContentSourceWrap>\r\n            </T_PlantInfoContentCover>\r\n            <W_PlantInfoSelectCover>\r\n              {OverView}\r\n              {Structure}\r\n              {Geology}\r\n            </W_PlantInfoSelectCover>\r\n          </T_PlantInfo>\r\n        </T_PlantInfoCover>\r\n        <T_PlantFigureCover>\r\n          <T_PlantFigure>\r\n            <T_PlantFigureTitle>ROTATION TIME</T_PlantFigureTitle>\r\n            <T_PlantFigureContent>{Planet.planet.rotation}</T_PlantFigureContent>\r\n          </T_PlantFigure>\r\n          <T_PlantFigure>\r\n            <T_PlantFigureTitle>REVOLUTION TIME</T_PlantFigureTitle>\r\n            <T_PlantFigureContent>{Planet.planet.revolution}</T_PlantFigureContent>\r\n          </T_PlantFigure>\r\n          <T_PlantFigure>\r\n            <T_PlantFigureTitle>RADIUS</T_PlantFigureTitle>\r\n            <T_PlantFigureContent>{Planet.planet.radius}</T_PlantFigureContent>\r\n          </T_PlantFigure>\r\n          <T_PlantFigure>\r\n            <T_PlantFigureTitle>AVERAGE TEMP.</T_PlantFigureTitle>\r\n            <T_PlantFigureContent>{Planet.planet.temperature}</T_PlantFigureContent>\r\n          </T_PlantFigure>\r\n        </T_PlantFigureCover>\r\n      </W_ContentView>\r\n    </T_ContentViewCover>\r\n  )\r\n}\r\n\r\n\r\nconst M_ContentViewCover = styled.div`\r\n  display: ${props => props.display}; justify-content: center;  padding: 0px 0 47px;\r\n  width: 100%;\r\n`\r\nconst M_ContentView = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst M_PlantInfoCover = styled.div`\r\n  display: flex;  flex-direction: column; align-items: center;\r\n`\r\nconst M_PlantInfoSelectCover = styled.div`\r\n  display: flex;  column-gap: 43px; justify-content: center;\r\n  width: 100%;  \r\n  border-bottom: 1px solid rgba(151,151,151,0.2);\r\n`\r\n\r\nconst M_PlantInfoSelect = styled.div`\r\n  display: flex; align-items: center;\r\n  height: 50px;\r\n  border-bottom: 4px solid rgba(0,0,0,0);\r\n`\r\n\r\nconst M_PlantInfoSelected = styled.div`\r\n  display: flex; align-items: center;\r\n  height: 50px;\r\n  border-bottom: 4px solid ${props => props.color};\r\n`\r\n\r\nconst M_PlantImgCover = styled.div`\r\n  position: relative; \r\n  width: 256px; height: 256px;  margin-top: 24px;\r\n`\r\nconst M_PlanGeologyImg = styled.img`\r\n  position: absolute; bottom: 10px; left: 50%;      transform: translateX(-50%);\r\n  width: 80px; height: 100px;\r\n`\r\nconst M_PlantInfo = styled.div`\r\n  display: flex;  flex-direction: column; justify-content: center;\r\n  margin-bottom: 28px;  width: 327px;\r\n`\r\n\r\nconst M_PlantName = styled.h2`\r\n  margin-bottom: 16px;  \r\n`\r\n\r\nconst M_PlantInfoContent = styled.div`\r\n  height:132px; margin-bottom: 10px;\r\n  font-size:11px; line-height: 22px; text-align:center;\r\n`\r\n\r\nconst M_PlantInfoContentSourceWrap = styled.a`\r\n  display:flex; align-items:center; column-gap: 4px;\r\n  width: fit-content;\r\n`\r\nconst M_PlantInfoContentSourceCover = styled.div`\r\n  display: flex; opacity: 50%; \r\n  font-size: 12px;  \r\n`\r\n\r\nconst M_PlantFigureCover = styled.div`\r\n  display: flex;  flex-direction:column;  row-gap: 8px; align-items: center;\r\n`\r\n\r\nconst M_PlantFigure = styled.div`\r\n  display: flex;  justify-content:space-between; align-items: center; row-gap: 4px;\r\n  padding: 9px 24px 13px 24px; width: 327px;\r\n  border: 1px solid rgba(216,216,216,.2) ;\r\n`\r\nconst M_PlantFigureTitle = styled.h4`\r\n  opacity: 50%; position: relative; top: 2px;\r\n  font-size:8px; line-height: 16px; word-spacing: 0.73px;\r\n`\r\nconst M_PlantFigureContent = styled.h2`\r\n  font-size: 20px;  line-height:1;  word-spacing: -0.75px;\r\n`\r\n\r\n\r\n\r\nfunction M_Content({ Planet, Device, HeaderState }) {\r\n\r\n  let PlanetImg = Planet.planetInfo == \"overview\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} /> : Planet.planetInfo == \"structure\" ? <img src={process.env.PUBLIC_URL + Planet.planet.images.internal} width={Planet.planet.size[Device]} /> : <img src={process.env.PUBLIC_URL + Planet.planet.images.planet} width={Planet.planet.size[Device]} />\r\n  let PlanetGeologyImg = Planet.planetInfo == \"geology\" ? <M_PlanGeologyImg src={process.env.PUBLIC_URL + Planet.planet.images.geology} /> : \"\"\r\n\r\n  let OverView = Planet.planetInfo == \"overview\" ? <M_PlantInfoSelected color={Planet.planet.color}>OVERVIEW</M_PlantInfoSelected> : <M_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('overview') }}>OVERVIEW</M_PlantInfoSelect>\r\n  let Structure = Planet.planetInfo == \"structure\" ? <M_PlantInfoSelected color={Planet.planet.color}>STRUCTURE</M_PlantInfoSelected> : <M_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('structure') }}>STRUCTURE</M_PlantInfoSelect>\r\n  let Geology = Planet.planetInfo == \"geology\" ? <M_PlantInfoSelected color={Planet.planet.color}>SURFACE</M_PlantInfoSelected> : <M_PlantInfoSelect onClick={() => { Planet.setPlanetInfo('geology') }}>SURFACE</M_PlantInfoSelect>\r\n\r\n\r\n  return (\r\n    <M_ContentViewCover display={HeaderState.header == \"open\" ? \"none\" : \"flex\"}>\r\n      <M_ContentView>\r\n\r\n        <M_PlantInfoCover>\r\n          <M_PlantInfoSelectCover>\r\n            {OverView}\r\n            {Structure}\r\n            {Geology}\r\n          </M_PlantInfoSelectCover>\r\n          <M_PlantImgCover className=\"center\"> {PlanetImg}{PlanetGeologyImg}</M_PlantImgCover>\r\n\r\n          <M_PlantInfo>\r\n            <M_PlantName className=\"center\">{Planet.planet.name.toUpperCase()}</M_PlantName>\r\n            <M_PlantInfoContent className=\"center\">{Planet.planet[Planet.planetInfo].content}</M_PlantInfoContent>\r\n            <div className=\"center\"><M_PlantInfoContentSourceWrap href={Planet.planet[Planet.planetInfo].source}><M_PlantInfoContentSourceCover>Source : <W_PlantInfoContentSourceIns> Wikipedia</W_PlantInfoContentSourceIns></M_PlantInfoContentSourceCover><Source /></M_PlantInfoContentSourceWrap></div>\r\n\r\n          </M_PlantInfo>\r\n        </M_PlantInfoCover>\r\n\r\n        <M_PlantFigureCover>\r\n          <M_PlantFigure>\r\n            <M_PlantFigureTitle>ROTATION TIME</M_PlantFigureTitle>\r\n            <M_PlantFigureContent>{Planet.planet.rotation}</M_PlantFigureContent>\r\n          </M_PlantFigure>\r\n          <M_PlantFigure>\r\n            <M_PlantFigureTitle>REVOLUTION TIME</M_PlantFigureTitle>\r\n            <M_PlantFigureContent>{Planet.planet.revolution}</M_PlantFigureContent>\r\n          </M_PlantFigure>\r\n          <M_PlantFigure>\r\n            <M_PlantFigureTitle>RADIUS</M_PlantFigureTitle>\r\n            <M_PlantFigureContent>{Planet.planet.radius}</M_PlantFigureContent>\r\n          </M_PlantFigure>\r\n          <M_PlantFigure>\r\n            <M_PlantFigureTitle>AVERAGE TEMP.</M_PlantFigureTitle>\r\n            <M_PlantFigureContent>{Planet.planet.temperature}</M_PlantFigureContent>\r\n          </M_PlantFigure>\r\n        </M_PlantFigureCover>\r\n\r\n      </M_ContentView>\r\n    </M_ContentViewCover>\r\n  )\r\n}\r\n\r\nfunction Content({ Device, Planet, HeaderState }) {\r\n\r\n  let View\r\n\r\n  switch (Device) {\r\n    case \"web\": View = W_Content\r\n      break;\r\n    case \"tablet\": View = T_Content\r\n      break;\r\n    case \"mobile\": View = M_Content\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <View Device={Device} Planet={Planet} HeaderState={HeaderState} />\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/background-stars.f6233a6a.svg\";","import styled from 'styled-components';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Header from './Header';\r\nimport Content from './Content';\r\n\r\nimport Planet from '../Resource/data.json'\r\nimport bgStar from '../Resource/background-stars.svg'\r\n\r\nconst View = styled.div`\r\n    min-width: 100%; min-height: 100%;  width: fit-content; height: fit-content;\r\n    display:flex; flex-direction: column;\r\n    background-color: #070724;  background-image: url(${props => props.bgSvg});\r\n`\r\n\r\nconst useResize = () => {\r\n\r\n    const [state, setState] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        device: 'web'\r\n    });\r\n\r\n    const scrolling = () => {\r\n\r\n        let nowDevice = 'mobile'\r\n\r\n        if (window.innerWidth <= 768) {\r\n            nowDevice = 'mobile'\r\n        } else if (window.innerWidth <= 1023) {\r\n            nowDevice = 'tablet'\r\n        } else {\r\n            nowDevice = 'web'\r\n        }\r\n\r\n        setState({\r\n            x: window.scrollX,\r\n            y: window.scrollY,\r\n            device: nowDevice\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", scrolling);\r\n        scrolling()\r\n        return () => {\r\n            window.removeEventListener(\"resize\", scrolling);\r\n        };\r\n    }, []);\r\n\r\n    return state.device;\r\n};\r\n\r\nconst useHeaderOpen = () => {\r\n\r\n    const [state, setState] = useState('close');\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return {\r\n        header: state,\r\n        setheader: setState\r\n    };\r\n\r\n};\r\n\r\nconst usePlanet = () => {\r\n\r\n    const planetName = Planet.map((value, key) => ({name:value.name, color:value.color}))\r\n\r\n    const [planetInfo,setPlanetInfo] = useState('overview')\r\n\r\n    const [planet, setPlanet] = useState(Planet[0]);\r\n\r\n    const planetSet = (name) =>{\r\n        Planet.some(function(value){\r\n            if(value.name == name){\r\n                setPlanet(value);\r\n                return true\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => { }, []);\r\n\r\n    return {\r\n        planetName:planetName,\r\n        setPlanetInfo : setPlanetInfo,\r\n        planetInfo:planetInfo,\r\n        setPlanet: planetSet,\r\n        planet: planet\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction MainLayout() {\r\n\r\n    const device = useResize()\r\n    const headerState = useHeaderOpen()\r\n    const planet = usePlanet()\r\n\r\n    return (\r\n        <View bgSvg={bgStar}>\r\n            <Header Device={device} HeaderState={headerState} Planet={planet}></Header>\r\n            <Content Device={device} HeaderState={headerState} Planet={planet}></Content>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainLayout from './Layout/MainLayout';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode><MainLayout /></React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}